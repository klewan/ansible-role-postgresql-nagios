---

- name: setup postgres passfile
  lineinfile:
    dest: "{{ postgresql_nagios_pgdata_item0 }}/{{ postgresql_nagios_passfile }}"
    create: yes
    mode: 0600
    regexp: '^[^:]+:[^:]+:[^:]+:{{ postgresql_nagios_user }}:[^:]+'
    line: '*:*:*:{{ postgresql_nagios_user }}:{{ item.1.password_unencrypted }}'
    backup: yes
    owner: "{{ postgresql_user }}"
    group: "{{ postgresql_group }}"
  with_subelements:
    - "{{ postgresql_clusters }}"
    - users
  loop_control:
    label: "[instance: {{ item.0.name }}, file: {{ postgresql_nagios_pgdata_item0 }}/{{ postgresql_nagios_passfile }}]"
  when: item.0.state == 'present' and item.1.name == postgresql_nagios_user and item.1.password_unencrypted is defined
  tags:
    - postgresql_nagios_passfile

- name: create scripts directory
  file: path={{ postgresql_scripts_directory }} state=directory owner={{ postgresql_user }} group={{ postgresql_group }} mode=0755
  tags:
    - postgresql_nagios_scripts_directory

- name: copy scripts (1)
  template:
    src: "{{ item.file }}"
    dest: "{{ item.dest }}"
    owner: "{{ item.owner }}"
    group: "{{ item.group }}"
    mode: "{{ item.mode }}"
  with_items:
    - "{{ postgresql_nagios_templates_to_copy }}"
  loop_control:
    label: "file: {{ item.file }}, dest: {{ item.dest }}]"
  tags:
    - postgresql_nagios_copy_scripts

- name: copy scripts (2)
  copy:
    src: "{{ item.file }}"
    dest: "{{ item.dest }}"
    owner: "{{ item.owner }}"
    group: "{{ item.group }}"
    mode: "{{ item.mode }}"
  with_items:
    - "{{ postgresql_nagios_files_to_copy }}"
  loop_control:
    label: "file: {{ item.file }}, dest: {{ item.dest }}]"
  tags:
    - postgresql_nagios_copy_scripts

